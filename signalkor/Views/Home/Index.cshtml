@{
    ViewBag.Title = "Home Page";
}
<script type="text/javascript" src="/signalr/hubs"></script>

@if (false) { 
    <script src="../../Scripts/jquery-1.6.4-vsdoc.js" type="text/javascript"></script>
    <script src="../../Scripts/knockout.debug.js" type="text/javascript"></script>
    <script src="../../Scripts/knockout.mapping-latest.debug.js" type="text/javascript"></script>
}

<script type="text/javascript">

    $(document).ready(function () {

        var ViewModel = function () {
            var self = this;

            self.speed = 10;

            self.player = ko.observable();

            self.isStarted = ko.observable(false);

            self.startx = 0;

            self.starty = 0;

            self.start = function () {
                self.startx = Math.floor(Math.random() * 100);
                self.starty = Math.floor(Math.random() * 100);
                hub.moveTo(self.player(), self.startx, self.starty);
                self.isStarted(true);
            };

            self.playerPositions = ko.observableArray([]);

            self.otherPlayerPositions = ko.computed(function () {
                return ko.utils.arrayFilter(self.playerPositions(), function (p) { return p.player() !== self.player(); });
            });

            self.dragStop = function (event, ui) {
                hub.moveTo(self.player(), ui.position.left, ui.position.top);
            }

            self.updatePlayerPositions = function (playerPositions) {
                for (i in playerPositions) {
                    var playerPosition = playerPositions[i];
                    var pp = ko.utils.arrayFirst(self.playerPositions(), function (x) { return x.player() === playerPosition.player; });

                    if (pp)
                        ko.mapping.fromJS(playerPosition, pp);
                    else
                        self.playerPositions.push(ko.mapping.fromJS(playerPosition));

                }
            };

            self.debug = ko.observable(false);
            self.toggleDebug = function () { self.debug(!self.debug()); };
        };

        var hub = $.connection.gameHub;

        var vm = window.vm = new ViewModel();
        $(document).keydown(vm.handleKeyDown);

        ko.applyBindings(vm, $("#MainContent")[0]);
        hub.updatePlayerPositions = vm.updatePlayerPositions;

        $.connection.hub.start(function () { hub.getPlayerPositions(); });

    });

</script>

<div id="MainContent">
    <label>Player Name:</label><input type="text" data-bind="value: player, enable: !isStarted()"/><button data-bind="click: start">start</button>
    <div style="width:400px; height: 400px; border: 1px; border-style:solid">
        <!-- ko foreach: otherPlayerPositions -->
        <div data-bind="style: { position: 'relative', float: 'left', left: x() + 'px', top: y() + 'px' }">
            <span style="font-style: italic; font-weight: bold" data-bind="text: player"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: isStarted -->
        <div id="a" data-bind="draggable: { stop: dragStop }, style: { position: 'relative', float: 'left', left: startx + 'px', top: starty + 'px', cursor: 'pointer' }">
            <span id ="b" style="font-style: italic; font-weight: bold" data-bind="text: player"></span>
        </div>       
        <!-- /ko -->

    </div>
    <div>
    <a href="#" data-bind="click: toggleDebug">debug</a>
    <pre data-bind="visible: debug, text: JSON.stringify(ko.toJS($data), null, 2)"></pre>
    </div>
</div>
